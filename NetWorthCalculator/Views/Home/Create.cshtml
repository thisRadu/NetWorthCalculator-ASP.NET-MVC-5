



@model NetWorthCalculator.Models.NetWorthViewModel

@{
    ViewData["Title"] = "Create";

}

<div class="container">

 
    <hr />

     <form asp-action="Create">

    <div class="card">
        <h2 class="card-header">Your net worth calculator</h2>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <h3>Assets <span style="font-weight:normal">(what you own)</span></h3>
                         
                  <div id="AssetsContainer">
        
                </div>
                     
                      <button id="addAssetResultBtn" type="button" class="btn btn-success"><i class="fas fa-plus"></i> Add Assety</button>
               
                </div>
                <div class="col-md-6">
                    <h3>Liabilities <span style="font-weight:normal">(what you owe)</span></h3>
                 
        
           <div id="LiabilitiesContainer">
       
                </div>
       
                 <button id="addLiabilityResultBtn" type="button" class="btn btn-success"><i class="fas fa-plus"></i> Add Liability</button> 
                
                
                </div>
            </div>
            <hr>
        <div class="row">
    <div class="col-md-6">
        <p class="subtotal asset" style="font-weight:bold">Total assets: <span class="asset-total">$0.00</span></p>
    </div>
    <div class="col-md-6">
        <p class="subtotal liability" style="font-weight:bold">Total liabilities: <span class="liability-total">$$0.00</span></p>
    </div>
</div>

       <div style="display: flex; justify-content: center; align-items: center; height: 20vh;">
  <button class="btn btn-outline-dark disabled">
    <h2 class="text-center font-weight-bold">Your total net worth: <span class="netWorthResult">$0.00</span></h2>
  </button>
</div>
        </div>
    </div>
  
   
  <div class="d-flex justify-content-center align-items-center">
    <input type="submit" value="Save" class="btn btn-primary m-2 text-center"></input>
    </div>
     </form>
 
</div>
            
          




@section Scripts {
      <script>

          $(document).on('input', '.asset, .liability', function () {
    var assetTotal = 0;
    var liabilityTotal = 0;

    // Loop through all asset input fields and sum their values
    $('.asset').each(function () {
        var value = parseFloat($(this).val());
        if (!isNaN(value)) {
            assetTotal += value;
        }
    });

    // Loop through all liability input fields and sum their values
    $('.liability').each(function () {
        var value = parseFloat($(this).val());
        if (!isNaN(value)) {
            liabilityTotal += value;
        }
    });

    // Update the subtotal display for assets and liabilities
    $('.asset-total').text('$' + assetTotal.toFixed(2));
    $('.liability-total').text('$' + liabilityTotal.toFixed(2));

    // Calculate the net worth and update the display
    var netWorth = assetTotal - liabilityTotal;
    var fontColor = netWorth < 0 ? 'red' : 'green';
    $('.netWorthResult').text('$' + netWorth.toFixed(2)).css('color', fontColor);
});


        $(document).ready(function () {
            var LiabilitiesContainer = $("#LiabilitiesContainer");
            var AssetsContainer = $("#AssetsContainer");
            var addLiabilityResultBtn = $("#addLiabilityResultBtn");
             var addAssetResultBtn = $("#addAssetResultBtn");
            var netWorthItemsCount = @Model.NetWorthItemResults.Count;

            addLiabilityResultBtn.click(function () {
                var template = `
                    <div class="form-group">
                        
                        <input name="NetWorthItemResults[${netWorthItemsCount}].ItemNavigation.Name" class="form-control" placeholder="Enter Description" />
                        <span class="text-danger" data-valmsg-for="NetWorthItemResults[${netWorthItemsCount}].ItemNavigation.Name" ></span>
                    </div>
                    <div class="form-group">
                       
                        <input name="NetWorthItemResults[${netWorthItemsCount}].Value" class="liability form-control" placeholder="Enter Value" />
                        <span class="text-danger"  data-valmsg-for="NetWorthItem
                                            Results[${netWorthItemsCount}].Value"></span>
                    </div>
                    <br>
                    <input  name="NetWorthItemResults[${netWorthItemsCount}].Item" type="hidden" value="0" />
                     <input name="NetWorthItemResults[${netWorthItemsCount}].ItemNavigation.Type" type="hidden" value="Liability" />
                `;
                LiabilitiesContainer.append(template);
                netWorthItemsCount++;
            });
            addAssetResultBtn.click(function () {
                var template = `
                    <div class="form-group">
                        
                        <input name="NetWorthItemResults[${netWorthItemsCount}].ItemNavigation.Name" class="form-control" placeholder="Enter Description" />
                        <span class="text-danger" data-valmsg-for="NetWorthItemResults[${netWorthItemsCount}].ItemNavigation.Name" ></span>
                    </div>
                    <div class="form-group">
                       
                        <input name="NetWorthItemResults[${netWorthItemsCount}].Value" class="asset form-control" placeholder="Enter Value" />
                        <span class="text-danger" data-valmsg-for="NetWorthItem
                                            Results[${netWorthItemsCount}].Value"></span>
                    </div>
                    <br>
                    <input  name="NetWorthItemResults[${netWorthItemsCount}].Item" type="hidden" value="0" />
                     <input name="NetWorthItemResults[${netWorthItemsCount}].ItemNavigation.Type" type="hidden" value="Asset" />
                `;
                AssetsContainer.append(template);
                netWorthItemsCount++;
            });
        });
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}




